@page "/productlist"
@using BlazorSample009.Client.Services
@using BlazorSample009.Shared;
@inject IProductService ProductService
@inject IJSRuntime js

<h1></h1>
<!--- Add S--->
<a class="btn btn-secondary" href="/product/new">Add New</a>
<!--- Add E--->

<h1></h1>

@if (products == null)
{
    <p>Loading...</p>
}
else
{
<table class="table">
    <thead>
        <tr>
            <td>ID</td>
            <td>名称</td>
            <td>価格</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in products)
        {
            <tr>
                <td>@product.Id</td>
                <td>@product.Name</td>
                <td>@product.Price</td>
                <td>
                    <!--- Add S--->
                    <a class="btn btn-success" href="/product/edit/@product.Id">Edit</a>
                    <button class="btn btn-danger" @onclick="@(() => Delete(product.Id))">Delete</button>
                    <!--- Add E--->
                </td>
            </tr>
        }
    </tbody>
</table>
}

@code
{
    private List<Product> products;

    protected override async Task OnInitializedAsync()
    {
        products = await ProductService.GetAllProducts();
    }

    private async Task Delete(string id)
    {
        var product = products.First(x => x.Id == id);
        if (await js.InvokeAsync<bool>("confirm", $"{product.Name} ({product.Id}) 削除してもよろしいでしょうか？"))
        {
            await ProductService.DeleteProduct(id);
            await OnInitializedAsync();
        }
    }
}